library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
# type your code for Question 1 here, and Knit
sfo_feb_flight <- nycflights %>%
filter(dest == "SFO", month ==2)
n(sfo_feb_flight)
# type your code for Question 1 here, and Knit
sfo_feb_flight <- nycflights %>%
filter(dest == "SFO", month ==2)
sfo_feb_flight %>% n()
# type your code for Question 1 here, and Knit
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month ==2)
sfo_feb_flights %>% summarise(n = n())
# type your code for Question 2 here, and Knit
sfo_feb_flights %>% summarise(mean_ad = mean(arr_delay), sd_ad = sd(arr_delay), n = n())
ggplot(sfo_feb_flights)+
geom_histogram(x = arr_delay)
# type your code for Question 2 here, and Knit
sfo_feb_flights %>% summarise(mean_ad = mean(arr_delay), sd_ad = sd(arr_delay), n = n())
ggplot(sfo_feb_flights)+
geom_histogram(aes(x = arr_delay))
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights %>%
group_by(origin) %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
# type your code for Question 3 here, and Knit
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(median_ad = median(arr_delay), IQR_ad = IQR(arr_delay))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
ggplot(data = nycflights, aes(x = origin, fill = dep_type)) +
geom_bar()
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum) %>%
arrange(desc(ot_dep_rate))
View(nycflights)
View(nycflights)
data(nycflights)
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum) %>%
arrange(desc(avg_speed))
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum) %>%
arrange(asce(avg_speed))
?desc
# type your code for Question 8 here, and Knit
nycflights %>%
mutate(avg_speed = distance/(air_time/60)) %>%
select(avg_speed, tailnum) %>%
arrange(avg_speed)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
select(avg_speed, tailnum) %>%
arrange(avg_speed)
# type your code for Question 9 here, and Knit
ggplot(nycflights)+
geom_point(aes(x = avg_speed, y = distance))
# type your code for Question 9 here, and Knit
ggplot(nycflights)+
geom_point(aes(x = distance, y = avg_speed))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_arr_rate = sum(arr_delay == "on time") / n(dep_type == "delayed")) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_delay == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay <= 0, "on time", "delayed"))
nycflights %>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_delay == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
library(installr)
updateR()
install.packages("rmarkdown")
installed.packages("tidyverse")
install.packages("tidyverse")
